+							</div>
+						</div>
+						<div wqdpathfill="#212121" wqdhref="0" data-zindex="5"
+							style="width: 100px; height: 30px; left: 195.5px; top: 161.5px; z-index: 5;"
+							id="elementid14514702395951" elementid="elementid14514702395951"
+							class="wqdelementEdit" data-elementtype="line"
+							data-elemandgroup="true">
+							<div class="wqdelementEditBox">
+								<div class="wqd-line"
+									style="height: 0; border-top: 1px solid #3d9be9; position: relative; top: 50%;"></div>
+							</div>
+						</div>
+						<div data-animation-iteration-count="1" data-animation-delay="0"
+							data-animation-duration="1" data-animate="fadeInUp"
+							data-zindex="6"
+							style="width: 448px; height: 30px; left: 12.6167px; top: 201.5px; z-index: 6;"
+							id="elementid14514702395952" elementid="elementid14514702395952"
+							class="wqdelementEdit aniTriOther" data-elementtype="text"
+							data-elemandgroup="true">
+							<div style="visibility: visible;"
+								data-emptytexttemplate="
+								&lt;p class=&quot;wqd-text-article3 wqdCkEmptyTextos&quot;&gt;正文文本3&lt;/p&gt;
+							"
+								class="wqdelementEditBox">
+								<p class="wqd-text-article3" style="text-align: center;">
+									<span style="color: #808080;">用本公司建网站,上手快.颜值高.跨多屏.自传播.全智能.</span>
+								</p>
+							</div>
+						</div>
+						<div data-zindex="7"
+							style="width: 491px; height: 360px; left: 0px; top: 231.5px; z-index: 7;"
+							id="elementId1453385364065" elementid="elementId1453385364065"
+							class="wqdelementEdit elementsContainer" data-elementtype="form"
+							data-elemandgroup="true" eleid="wqd1451459321682serial">
+							<div class="wqdelementEditBox" style="overflow: visible;">
+								<form data-maxzindex="6"
+									class="wqd-form wqdControlForm elemContBox"
+									style="overflow: visible;">
+									<div fontfamily="3" borderwidth="1" data-zindex="1"
+										style="width: 224px; height: 40px; left: 9px; top: 26.5px; z-index: 1;"
+										id="elementId1453385391356" elementid="elementId1453385391356"
+										class="wqdelementEdit" data-elementtype="formInput"
+										data-elemandgroup="true" wqdformtitle="姓名">
+										<div class="wqdelementEditBox">
+											<div class="wqd-form-element formInput wqdControlFormEl1">
+												<input placeholder="姓名" name="name" autocomplete="off"
+													type="text">
+											</div>
+										</div>
+									</div>
+									<div wqdformtitle="邮箱" fontfamily="3" borderwidth="1"
+										data-zindex="2"
+										style="width: 228px; height: 40px; left: 251px; top: 26.5px; z-index: 2;"
+										id="elementId1453385459899" elementid="elementId1453385459899"
+										class="wqdelementEdit" data-elementtype="formInput"
+										data-elemandgroup="true">
+										<div class="wqdelementEditBox">
+											<div class="wqd-form-element formInput wqdControlFormEl1">
+												<input placeholder="邮箱" name="name" autocomplete="off"
+													type="text">
+											</div>
+										</div>
+									</div>
+									<div wqdformtitle="电话" fontfamily="3" borderwidth="1"
+										data-zindex="3"
+										style="width: 225px; height: 40px; left: 9px; top: 81.5px; z-index: 3;"
+										id="elementId1453385469406" elementid="elementId1453385469406"
+										class="wqdelementEdit" data-elementtype="formInput"
+										data-elemandgroup="true">
+										<div class="wqdelementEditBox">
+											<div class="wqd-form-element formInput wqdControlFormEl1">
+												<input placeholder="电话" name="name" autocomplete="off"
+													type="text">
+											</div>
+										</div>
+									</div>
+									<div wqdformtitle="主题" fontfamily="3" borderwidth="1"
+										data-zindex="4"
+										style="width: 227px; height: 40px; left: 253px; top: 81.5px; z-index: 4;"
+										id="elementId1453385478255" elementid="elementId1453385478255"
+										class="wqdelementEdit" data-elementtype="formInput"
+										data-elemandgroup="true">
+										<div class="wqdelementEditBox">
+											<div class="wqd-form-element formInput wqdControlFormEl1">
+												<input placeholder="主题" name="name" autocomplete="off"
+													type="text">
+											</div>
+										</div>
+									</div>
+									<div wqdformtitle="详细内容" fontfamily="3" borderwidth="1"
+										data-zindex="5"
+										style="width: 472px; height: 114px; left: 9px; top: 141.5px; z-index: 5;"
+										id="elementId1453385488459" elementid="elementId1453385488459"
+										class="wqdelementEdit" data-elementtype="formTextarea"
+										data-elemandgroup="true">
+										<div class="wqdelementEditBox">
+											<div class="wqd-form-element formTextarea wqdControlFormEl2">
+												<textarea placeholder="详细内容"></textarea>
+											</div>
+										</div>
+									</div>
+									<div hovtxtcol="#34373e" hovbordercol="#34373e"
+										hovbackcol="rgba(0,0,0,0)" wqdon="true" fontfamily="3"
+										borderwidth="2" bordercol="rgba(0,0,0,0)" backcol="#34373e"
+										txtcol="rgb(255, 255, 255)" data-zindex="6"
+										style="width: 193px; height: 40px; left: 148.5px; top: 282.5px; z-index: 6; cursor: pointer;"
+										id="elementId1453385758532" elementid="elementId1453385758532"
+										class="wqdelementEdit" data-elementtype="formButton"
+										data-elemandgroup="true" data-unused="copy" wqdeleradius="4">
+										<div class="wqdelementEditBox">
+											<div class="wqd-form-element formButton wqdControlFormEl7">
+												<a style="border-width: 2px; border-style: solid;"
+													class="wqd-button on"><em>提交</em></a>
+											</div>
+										</div>
+									</div>
+								</form>
+							</div>
+						</div>
+					</section>
+				</div>
+			</div>
+			<div class="yzmoveContent">
+				<div wqdbgset="0" wqdback_position="1"
+					style="background-attachment: scroll; background-size: cover; background-position: center center; background-repeat: no-repeat;"
+					class="wqdSectiondiv" data-type="wqdSectiondiv" sortid="13"
+					partid="wqd1451459437977serial" commonpartid="10542"
+					id="wqd1451459437977serial" sectionname="空白栏目-PC/手机均可"
+					partcategoryid="2">
+					<style sectionwidth="1200" type="text/css"
+						class="elementid14514708740990">
+#elementid14514708740990 .wqd-freeRect {
+	background-color: #ffffff !important;
+	border-color: #f0f0f0 !important;
+	border-width: 1px;
+	border-style: solid;
+}
+</style>
+					<style sectionwidth="1200" type="text/css"
+						class="elementid14514708702140">
+#elementid14514708702140 .wqd-freeRect {
+	background-color: #ffffff !important;
+	border-color: #f0f0f0 !important;
+	border-width: 1px;
+	border-style: solid;
+}
+</style>
+					<style sectionwidth="1200" type="text/css"
+						class="elementid14514708658370">
+#elementid14514708658370 .wqd-freeRect {
+	background-color: #ffffff !important;
+	border-color: #f0f0f0 !important;
+	border-width: 1px;
+	border-style: solid;
+}
+</style>
+					<style sectionwidth="1200" type="text/css"
+						class="elementid14514708618010">
+#elementid14514708618010 .wqd-freeRect {
+	background-color: rgba(34, 85, 85, 0) !important;
+	border-color: #f0f0f0 !important;
+	border-width: 1px;
+	border-style: solid;
+}
+</style>
+					<style sectionwidth="1200" type="text/css"
+						class="elementId1451470832128">
+#elementId1451470832128 .wqd-freeRect {
+	background-color: #ffffff !important;
+	border-color: #f0f0f0 !important;
+	border-width: 1px;
+	border-style: solid;
+}
+</style>
+					<style sectionwidth="1200" type="text/css"
+						class="wqd1451459437977serial">
+#wqd1451459437977serial:before {
+	content: ' ';
+	position: absolute;
+	top: 0;
+	left: 0;
+	width: 100%;
+	height: 100%;
+	background-color: #ffffff;
+}
+</style>
+					<section wqdbgcolor="#ffffff" wqdwidthlimit="0" wqdbgattachment="0"
+						bac_position="5" wqdheight="172" sectionwidth="1200"
+						class="wqd1445504393013css wqdBkEditos sectionV2 moveMainArea elementsContainer"
+						style="height: 172px; m							class="wqdelementEditBox">
+								<i
+									style="text-align: center; display: block; font-style: normal;"><span
+									style="font-size: 36px;"><strong>225</strong></span></i>
+							</div>
+						</div>
+						<div wqdpathfill="#212121" wqdhref="0" data-zindex="14"
+							style="width: 100px; height: 30px; left: 28.3833px; top: 147.5px; z-index: 14;"
+							id="elementid14514651690770" elementid="elementid14514651690770"
+							class="wqdelementEdit" data-elementtype="line"
+							data-elemandgroup="true">
+							<div class="wqdelementEditBox">
+								<div class="wqd-line"
+									style="height: 0; border-top: 1px solid #3d9be9; position: relative; top: 50%;"></div>
+							</div>
+						</div>
+						<div data-animation-iteration-count="1" data-animation-delay="0"
+							data-animation-duration="1" data-animate="fadeInUp"
+							data-zindex="15"
+							style="width: 81px; height: 28px; left: 39px; top: 192.267px; z-index: 15;"
+							id="elementid14514651798210" elementid="elementid14514651798210"
+							class="wqdelementEdit aniTriOther" data-elementtype="text"
+							data-elemandgroup="true">
+							<div style="visibility: visible;"
+								data-emptytexttemplate="
+								&lt;p class=&quot;wqd-text-article3 wqdCkEmptyTextos&quot;&gt;正文文本3&lt;/p&gt;
+							"
+								class="wqdelementEditBox">
+								<p class="wqd-text-article3" style="text-align: center;">页面炫酷</p>
+							</div>
+						</div>
+						<div data-animation-iteration-count="1" data-animation-delay="0"
+							data-animation-duration="1" data-animate="fadeInDown"
+							data-zindex="15"
+							style="width: 159px; height: 49px; left: 1041px; top: 90.5px; z-index: 15;"
+							id="elementid14514652480370" elementid="elementid14514652480370"
+							class="wqdelementEdit aniTriOther" data-elementtype="text"
+							data-elemandgroup="true">
+							<div style="visibility: visible;"
+								data-emptytexttemplate="
+								&lt;h3 class=&quot;wqd-text-title3 wqdCkEmptyTextos&quot;&gt;H3 标题文字&lt;/h3&gt;
+							"
+								class="wqdelementEditBox">
+								<i
+									style="text-align: center; display: block; font-style: normal;"><span
+									style="font-size: 36px;"><strong>450</strong></span></i>
+							</div>
+						</div>
+						<div wqdpathfill="#212121" wqdhref="0" data-zindex="16"
+							style="width: 100px; height: 30px; left: 1069.38px; top: 147.5px; z-index: 16;"
+							id="elementid14514652480371" elementid="elementid14514652480371"
+							class="wqdelementEdit" data-elementtype="line"
+							data-elemandgroup="true">
+							<div class="wqdelementEditBox">
+								<div class="wqd-line"
+									style="height: 0; border-top: 1px solid #3d9be9; position: relative; top: 50%;"></div>
+							</div>
+						</div>
+						<div data-animation-iteration-count="1" data-animation-delay="0"
+							data-animation-duration="1" data-animate="fadeInUp"
+							data-zindex="17"
+							style="width: 81px; height: 28px; left: 1080px; top: 192.267px; z-index: 17;"
+							id="elementid14514652480372" elementid="elementid14514652480372"
+							class="wqdelementEdit aniTriOther" data-elementtype="text"
+							data-elemandgroup="true">
+							<div style="visibility: visible;"
+								data-emptytexttemplate="
+								&lt;p class=&quot;wqd-text-article3 wqdCkEmptyTextos&quot;&gt;正文文本3&lt;/p&gt;
+							"
+								class="wqdelementEditBox">
+								<p class="wqd-text-article3" style="text-align: center;">安全稳定</p>
+							</div>
+						</div>
+						<div wqdpathfill="#f4f5f7" wqdhref="0" data-zindex="2"
+							style="width: 259px; height: 325px; left: 215.383px; top: 0px; z-index: 2;"
+							id="elementId1451465322568" elementid="elementId1451465322568"
+							class="wqdelementEdit" data-elementtype="freeRect"
+							data-elemandgroup="true">
+							<div class="wqdelementEditBox">
+								<div class="wqd-freeRect"
+									style="width: 100%; height: 100%; background: #3DC288;"></div>
+							</div>
+						</div>
+						<div wqdpathfill="#f4f5f7" wqdhref="0" data-zindex="1"
+							style="width: 284px; height: 325px; left: 721.883px; top: 0px; z-index: 1;"
+							id="elementid14514653493260" elementid="elementid14514653493260"
+							class="wqdelementEdit" data-elementtype="freeRect"
+							data-elemandgroup="true">
+							<div class="wqdelementEditBox">
+								<div class="wqd-freeRect"
+									style="width: 100%; height: 100%; background: #3DC288;"></div>
+							</div>
+						</div>
+					</section>
+				</div>
+			</div>
+			<div class="yzmoveContent">
+				<div wqdbgset="0" wqdback_position="1"
+					style="background-attachment: scroll; background-size: cover; background-position: center center; background-repeat: no-repeat;"
+					class="wqdSectiondiv" data-type="wqdSectiondiv" sortid="5"
+					partid="wqd1451459009596serial" commonpartid="10542"
+					id="wqd1451459009596serial" sectionname="空白栏目-PC/手机均可"
+					partcategoryid="2">
+					<style type="text/css" class="elementId1454088395849">
+#elementId1454088395849 .wqd-freeRect {
+	background-color: rgba(34, 85, 85, 0) !important;
+	border-color: #282828 !important;
+	border-width: 1px;
+	border-style: solid;
+}
+</style>
+					<style type="text/css" class="elementId1454088395848s">
+#elementId1454088395848s .containerWarp {
+	background-color: rgba(207, 228, 228, 0);
+}
+</style>
+					<style type="text/css" class="elementId1454088395846">
+#elementId1454088395846 .containerWarp {
+	background-color: rgba(190, 161, 167, 0);
+}
+</style>
+					<style type="text/css" class="elementId1454088392430">
+#elementId1454088392430 .wqd-freeRect {
+	background-color: rgba(34, 85, 85, 0) !important;
+	border-color: #282828 !important;
+	border-width: 1px;
+	border-style: solid;
+}
+</style>
+					<style type="text/css" class="elementId1454088392428s">
+#elementId1454088392428s .containerWarp {
+	background-color: rgba(207, 228, 228, 0);
+}
+</style>
+					<style type="text/css" class="elementId1454088392424">
+#elementId1454088392424 .containerWarp {
+	background-color: rgba(190, 161, 167, 0);
+}
+</style>
+					<style type="text/css" class="elementId1454088387996">
+#elementId1454088387996 .wqd-freeRect {
+	background-color: rgba(34, 85, 85, 0) !important;
+	border-color: #282828 !important;
+	border-width: 1px;
+	border-style: solid;
+}
+</style>
+					<style type="text/css" class="elementId1454088387993s">
+#elementId1454088387993s .containerWarp {
+	background-color: rgba(207, 228, 228, 0);
+}
+</style>
+					<style type="text/css" class="elementId1454088387992">
+#elementId1454088387992 .containerWarp {
+	background-color: rgba(190, 161, 167, 0);
+}
+</style>
+					<style type="text/css" class="elementId1454088378067">
+#elementId1454088378067 .wqd-freeRect {
+	background-color: rgba(34, 85, 85, 0) !important;
+	border-color: #282828 !important;
+	border-width: 1px;
+	border-style: solid;
+}
+</style>
+					<style type="text/css" class="elementId1454088378065s">
+#elementId1454088378065s .containerWarp {
+	background-color: rgba(207, 228, 228, 0);
+}
+</style>
+					<style type="text/css" class="elementId1454088378063">
+#elementId1454088378063 .containerWarp {
+	background-color: rgba(190, 161, 167, 0);
+}
+</style>
+					<style type="text/css" class="elementId1454088373661">
+#elementId1454088373661 .wqd-freeRect {
+	background-color: rgba(34, 85, 85, 0) !important;
+	border-color: #282828 !important;
+	border-width: 1px;
+	border-style: solid;
+}
+</style>
+					<style type="text/css" class="elementId1454088373659s">
+#elementId1454088373659s .containerWarp {
+	background-color: rgba(207, 228, 228, 0);
+}
+</style>
+					<style type="text/css" class="elementId1454088373657">
+#elementId1454088373657 .containerWarp {
+	background-color: rgba(190, 161, 167, 0);
+}
+</style>
+					<style type="text/css" class="elementId1454088347124">
+#elementId1454088347124 .wqd-freeRect {
+	background-color: rgba(34, 85, 85, 0) !important;
+	border-color: #282828 !important;
+	border-width: 1px;
+	border-style: solid;
+}
+</style>
+					<style type="text/css" class="elementId1454088323590">
+#elementId1454088323590 .containerWarp {
+	background-color: rgba(190, 161, 167, 0);
+}
+</style>
+					<style type="text/css" class="elementId1454088323594">
+#elementId1454088323594 .containerWarp {
+	background-color: rgba(207, 228, 228, 0);
+}
+</style>
+					<style sectionwidth="1200" type="text/css"
+						class="wqd1451459009596serial">
+#wqd1451459009596serial:before {
+	content: ' ';
+	position: absolute;
+	top: 0;
+	left: 0;
+	width: 100%;
+	height: 100%;
+	background-color: #ffffff;
+}
+</style>
+					<style sectionwidth="1200" type="text/css"
+						class="elementId1451465786975">
+#elementId1451465786975 a {
+	background-color: rgba(255, 255, 255, 0);
+}
+
+#elementId1451465786975 .on:hover {
+	background-color: #35373e;
+	border-color: rgba(212, 136, 76, 0);
+}
+</style>
+					<style sectionwidth="1200" type="text/css"
+						class="elementId1451465640403">
+#elementId1451465640403 path {
+	fill: #ffffff;
+}
+</style>
+					<style sectionwidth="1200" type="text/css"
+						class="elementId1451465564465">
+#elementId1451465564465 .wqd-freeRect {
+	background-color: rgba(99, 100, 105, 0.81) !important;
+	border-color: rgba(181, 181, 181, 0.7) !important;
+	border-width: 1px;
+	border-style: solid;
+}
+</style>
+					<style sectionwidth="1200" type="text/css"
+						class="elementid14514659526571">
+#elementid14514659526571 .wqd-line {
+	border-top-color: #212121 !important;
+}
+</style>
+					<section wqdbgcolor="#ffffff" wqdwidthlimit="0" wqdbgattachment="0"
+						bac_position="5" wqdheight="518" sectionwidth="1200"
+						class="wqd1445504393013css wqdBkEditos sectionV2 moveMainArea elementsContainer"
+						style="height: 518px; margin: 0px auto; position: relative; z-index: 5;"
+						wqdimgurlos="http://img.wqdian.com/group1/M00/46/9F/yq0KXVaDgJuAHl0dAAH4R_M-c4I921.jpg"
+						wqdbgcoloros="#eee" data-maxzindex="28">
+						<div data-zindex="1" id="elementId1451465507124"
+							elementid="elementId1451465507124" class="wqdelementEdit"
+							data-elementtype="img" data-elemandgroup="true"
+							style="width: 675px; height: 518px; left: 0px; top: 0px; z-index: 1;">
+							<div class="wqdelementEditBox">
+								<img class="wqd-img"
+									src="${ctxPath}/static/modular/system/home/yq0KXFaDmv2AD6kfAABkSqnWWF4994.jpg"
+									ondragstart="return false;">
+							</div>
+						</div>
+						<div data-animation-iteration-count="1" data-animation-delay="0"
+							data-animation-duration="1" data-animate="zoomIn"
+							wqdpathstrok="rgba(181,181,181,0.7)" wqdpath_width="5"
+							wqdpathfill="rgba(99,100,105,0.81)" wqdhref="0" data-zindex="2"
+							style="width: 565px; height: 421px; left: 55px; top: 54.5px; z-index: 2;"
+							id="elementId1451465564465" elementid="elementId1451465564465"
+							class="wqdelementEdit aniTriOther" data-elementtype="freeRect"
+							data-elemandgroup="true">
+							<div style="" class="wqdelementEditBox">
+								<div class="wqd-freeRect"
+									style="width: 100%; height: 100%; background: rgb(61, 194, 136) none repeat scroll 0% 0%; border-width: 5px; border-style: solid; border-color: rgb(255, 255, 255);"></div>
+							</div>
+						</div>
+						<div wqdpathfill="#ffffff" wqdhref="0" data-zindex="3"
+							style="width: 60px; height: 60px; left: 302.5px; top: 97px; z-index: 3;"
+							id="elementId1451465640403" elementid="elementId1451465640403"
+							class="wqdelementEdit" data-elementtype="icon"
+							data-elemandgroup="true">
+							<div style="" class="wqdelementEditBox wqdAnimatedos">
+								<svg class="wqd-svgicon" viewBox="-250 -250 2392 2392"
+									xmlns="http://www.w3.org/2000/svg">
+									<path fill="#999"
+										d="M1062 150q-317 121-556 362.5t-358 560.5q-20-89-20-176 0-208 102.5-384.5t278.5-279 384-102.5q82 0 169 19zm269 119q93 65 164 155-389 113-674.5 400.5t-396.5 676.5q-93-72-155-162 112-386 395-671t667-399zm-733 1334q115-356 379.5-622t619.5-384q40 92 54 195-292 120-516 345t-343 518q-103-14-194-52zm1066 58q-193-50-367-115-135 84-290 107 109-205 274-370.5t369-275.5q-21 152-101 284 65 175 115 370z"></path></svg>
+							</div>
+						</div>
+						<div data-zindex="4"
+							style="width: 121px; height: 31px; left: 273.117px; top: 165.267px; z-index: 4;"
+							id="elementid14514656673980" elementid="elementid14514656673980"
+							class="wqdelementEdit" data-elementtype="text"
+							data-elemandgroup="true">
+							<div style="visibility: visible;"
+								data-emptytexttemplate="
+								&lt;p class=&quot;wqd-text-article3 wqdCkEmptyTextos&quot;&gt;正文文本3&lt;/p&gt;
+							"
+								class="wqdelementEditBox">
+								<i
+									style="text-align: center; display: block; font-style: normal;"><span
+									style="font-size: 18px;"><span
+										style="color: rgb(255, 255, 255);"><strong>自由创意</strong></span></span></i>
+							</div>
+						</div>
+						<div data-zindex="5"
+							style="width: 478px; height: 76px; left: 94.6167px; top: 234.5px; z-index: 5;"
+							id="elementid14514657340680" elementid="elementid14514657340680"
+							class="wqdelementEdit" data-elementtype="text"
+							data-elemandgroup="true">
+							<div style="visibility: visible;"
+								data-emptytexttemplate="
+								&lt;p class=&quot;wqd-text-article3 wqdCkEmptyTextos&quot;&gt;正文文本3&lt;/p&gt;
+							"
+								class="wqdelementEditBox">
+								<p class="wqd-text-article3" style="text-align: center;">
+									<span style="color: #FFFFFF;">本公司倾力打造的一个从网站建设.网网站运营管理到网站推广的自动化智能建站平台,为中小微企业及个人提供智能的在线响应式建站服务.</span>
+								</p>
+							</div>
+						</div>
+						<div data-animation-iteration-count="1" data-animation-delay="0"
+							data-animation-duration="1" data-animate="fadeInUp"
+							hoverborcol="rgba(212,136,76,0)" hoverbaccol="#35373e"
+							wqdborder_width="4" wqdon="true"
+							wqdbordercolor="rgb(255, 255, 255)"
+							wqdbgcolor="rgba(255,255,255,0)" wqdcolor="rgb(255, 255, 255)"
+							wqdborderradius="0" wqdheight="45" wqdhref="0" data-zindex="6"
+							style="width: 146px; height: 45px; left: 259.5px; top: 378px; z-index: 6;"
+							id="elementId1451465786975" elementid="elementId1451465786975"
+							class="wqdelementEdit aniTriOther" data-elementtype="button"
+							data-elemandgroup="true">
+							<div style="" class="wqdelementEditBox">
+								<a style="border-width: 4px; border-style: solid;"
+									class="wqd-button wqdComponentBtn1 on" wqdbtnborder="false"
+									ondragstart="return false;"><em style="font-weight: bold;">了解详情</em></a>
+							</div>
+						</div>
+						<div data-animation-iteration-count="1" data-animation-delay="0"
+							data-animation-duration="1" data-animate="fadeInRight"
+							data-zindex="7"
+							style="width: 40px; height: 40px; left: 700.817px; top: 131px; z-index: 7;"
+							id="elementId1451466056475" elementid="elementId1451466056475"
+							class="wqdelementEdit aniTriOther" data-elementtype="icon"
+							data-elemandgroup="true">
+							<div style="" class="wqdelementEditBox">
+								<svg class="wqd-svgicon" viewBox="-250 -250 2392 2392"
+									xmlns="http://www.w3.org/2000/svg">
+									<path fill="#999"
+										d="M1717 931q0-35-53-35h-1088q-40 0-85.5 21.5t-71.5 52.5l-294 363q-18 24-18 40 0 35 53 35h1088q40 0 86-22t71-53l294-363q18-22 18-39zm-1141-163h768v-160q0-40-28-68t-68-28h-576q-40 0-68-28t-28-68v-64q0-40-28-68t-68-28h-320q-40 0-68 28t-28 68v853l256-315q44-53 116-87.5t140-34.5zm1269 163q0 62-46 120l-295 363q-43 53-116 87.5t-140 34.5h-1088q-92 0-158-66t-66-158v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h544q92 0 158 66t66 158v160h192q54 0 99 24.5t67 70.5q15 32 15 68z"></path></svg>
+							</div>
+						</div>
+						<div data-animation-iteration-count="1" data-animation-delay="0"
+							data-animation-duration="1" data-animate="fadeInRight"
+							data-zindex="8"
+							style="width: 40px; height: 40px; left: 876.817px; top: 131px; z-index: 8;"
+							id="elementId1451466063864" elementid="elementId1451466063864"
+							class="wqdelementEdit aniTriOther" data-elementtype="icon"
+							data-elemandtream, state) {
+    if (stream.match(/^(?:\| ?| )([^\n]+)/)) {
+      return 'string';
+    }
+    if (stream.match(/^(<[^\n]*)/, false)) {
+      // html string
+      setInnerMode(stream, state, 'htmlmixed');
+      state.innerModeForLine = true;
+      return innerMode(stream, state, true);
+    }
+  }
+
+  function dot(stream, state) {
+    if (stream.eat('.')) {
+      var innerMode = null;
+      if (state.lastTag === 'script' && state.scriptType.toLowerCase().indexOf('javascript') != -1) {
+        innerMode = state.scriptType.toLowerCase().replace(/"|'/g, '');
+      } else if (state.lastTag === 'style') {
+        innerMode = 'css';
+      }
+      setInnerMode(stream, state, innerMode);
+      return 'dot';
+    }
+  }
+
+  function fail(stream) {
+    stream.next();
+    return null;
+  }
+
+
+  function setInnerMode(stream, state, mode) {
+    mode = CodeMirror.mimeModes[mode] || mode;
+    mode = config.innerModes ? config.innerModes(mode) || mode : mode;
+    mode = CodeMirror.mimeModes[mode] || mode;
+    mode = CodeMirror.getMode(config, mode);
+    state.indentOf = stream.indentation();
+
+    if (mode && mode.name !== 'null') {
+      state.innerMode = mode;
+    } else {
+      state.indentToken = 'string';
+    }
+  }
+  function innerMode(stream, state, force) {
+    if (stream.indentation() > state.indentOf || (state.innerModeForLine && !stream.sol()) || force) {
+      if (state.innerMode) {
+        if (!state.innerState) {
+          state.innerState = state.innerMode.startState ? state.innerMode.startState(stream.indentation()) : {};
+        }
+        return stream.hideFirstChars(state.indentOf + 2, function () {
+          return state.innerMode.token(stream, state.innerState) || true;
+        });
+      } else {
+        stream.skipToEnd();
+        return state.indentToken;
+      }
+    } else if (stream.sol()) {
+      state.indentOf = Infinity;
+      state.indentToken = null;
+      state.innerMode = null;
+      state.innerState = null;
+    }
+  }
+  function restOfLine(stream, state) {
+    if (stream.sol()) {
+      // if restOfLine was set at end of line, ignore it
+      state.restOfLine = '';
+    }
+    if (state.restOfLine) {
+      stream.skipToEnd();
+      var tok = state.restOfLine;
+      state.restOfLine = '';
+      return tok;
+    }
+  }
+
+
+  function startState() {
+    return new State();
+  }
+  function copyState(state) {
+    return state.copy();
+  }
+  /**
+   * Get the next token in the stream
+   *
+   * @param {Stream} stream
+   * @param {State} state
+   */
+  function nextToken(stream, state) {
+    var tok = innerMode(stream, state)
+      || restOfLine(stream, state)
+      || interpolationContinued(stream, state)
+      || includeFilteredContinued(stream, state)
+      || eachContinued(stream, state)
+      || attrsContinued(stream, state)
+      || javaScript(stream, state)
+      || javaScriptArguments(stream, state)
+      || callArguments(stream, state)
+
+      || yieldStatement(stream, state)
+      || doctype(stream, state)
+      || interpolation(stream, state)
+      || caseStatement(stream, state)
+      || when(stream, state)
+      || defaultStatement(stream, state)
+      || extendsStatement(stream, state)
+      || append(stream, state)
+      || prepend(stream, state)
+      || block(stream, state)
+      || include(stream, state)
+      || includeFiltered(stream, state)
+      || mixin(stream, state)
+      || call(stream, state)
+      || conditional(stream, state)
+      || each(stream, state)
+      || whileStatement(stream, state)
+      || tag(stream, state)
+      || filter(stream, state)
+      || code(stream, state)
+      || id(stream, state)
+      || className(stream, state)
+      || attrs(stream, state)
+      || attributesBlock(stream, state)
+      || indent(stream, state)
+      || text(stream, state)
+      || comment(stream, state)
+      || colon(stream, state)
+      || dot(stream, state)
+      || fail(stream, state);
+
+    return tok === true ? null : tok;
+  }
+  return {
+    startState: startState,
+    copyState: copyState,
+    token: nextToken
+  };
+});
+
+CodeMirror.defineMIME('text/x-jade', 'jade');
+
+});
diff --git a/qj-official-web/src/main/webapp/static/js/plugins/codemirror/mode/javascript/index.html b/qj-official-web/src/main/webapp/static/js/plugins/codemirror/mode/javascript/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..592a133d85a5f277bc415dbfdb6a56a9bb37ca26
--- /dev/null
+++ b/qj-official-web/src/main/webapp/static/js/plugins/codemirror/mode/javascript/index.html
@@ -0,0 +1,114 @@
+<!doctype html>
+
+<title>CodeMirror: JavaScript mode</title>
+<meta charset="utf-8"/>
+<link rel=stylesheet href="../../doc/docs.css">
+
+<link rel="stylesheet" href="../../lib/codemirror.css">
+<script src="../../lib/codemirror.js"></script>
+<script src="../../addon/edit/matchbrackets.js"></script>
+<script src="../../addon/comment/continuecomment.js"></script>
+<script src="../../addon/comment/comment.js"></script>
+<script src="javascript.js"></script>
+<style type="text/css">.CodeMirror {border-top: 1px solid black; border-bottom: 1px solid black;}</style>
+<div id=nav>
+  <a href="http://codemirror.net"><h1>CodeMirror</h1><img id=logo src="../../doc/logo.png"></a>
+
+  <ul>
+    <li><a href="../../index.html">Home</a>
+    <li><a href="../../doc/manual.html">Manual</a>
+    <li><a href="https://github.com/codemirror/codemirror">Code</a>
+  </ul>
+  <ul>
+    <li><a href="../index.html">Language modes</a>
+    <li><a class=active href="#">JavaScript</a>
+  </ul>
+</div>
+
+<article>
+<h2>JavaScript mode</h2>
+
+
+<div><textarea id="code" name="code">
+// Demo code (the actual new parser character stream implementation)
+
+function StringStream(string) {
+  this.pos = 0;
+  this.string = string;
+}
+
+StringStream.prototype = {
+  done: function() {return this.pos >= this.string.length;},
+  peek: function() {return this.string.charAt(this.pos);},
+  next: function() {
+    if (this.pos &lt; this.string.length)
+      return this.string.charAt(this.pos++);
+  },
+  eat: function(match) {
+    var ch = this.string.charAt(this.pos);
+    if (typeof match == "string") var ok = ch == match;
+    else var ok = ch &amp;&amp; match.test ? match.test(ch) : match(ch);
+    if (ok) {this.pos++; return ch;}
+  },
+  eatWhile: function(match) {
+    var start = this.pos;
+    while (this.eat(match));
+    if (this.pos > start) return this.string.slice(start, this.pos);
+  },
+  backUp: function(n) {this.pos -= n;},
+  column: function() {return this.pos;},
+  eatSpace: function() {
+    var start = this.pos;
+    while (/\s/.test(this.string.charAt(this.pos))) this.pos++;
+    return this.pos - start;
+  },
+  match: function(pattern, consume, caseInsensitive) {
+    if (typeof pattern == "string") {
+      function cased(str) {return caseInsensitive ? str.toLowerCase() : str;}
+      if (cased(this.string).indexOf(cased(pattern), this.pos) == this.pos) {
+        if (consume !== false) this.pos += str.length;
+        return true;
+      }
+    }
+    else {
+      var match = this.string.slice(this.pos).match(pattern);
+      if (match &amp;&amp; consume !== false) this.pos += match[0].length;
+      return match;
+    }
+  }
+};
+</textarea></div>
+
+    <script>
+      var editor = CodeMirror.fromTextArea(document.getElementById("code"), {
+        lineNumbers: true,
+        matchBrackets: true,
+        continueComments: "Enter",
+        extraKeys: {"Ctrl-Q": "toggleComment"}
+      });
+    </script>
+
+    <p>
+      JavaScript mode supports several configuration options:
+      <ul>
+        <li><code>json</code> which will set the mode to expect JSON
+        data rather than a JavaScript program.</li>
+        <li><code>jsonld</code> which will set the mode to expect
+        <a href="http://json-ld.org">JSON-LD</a> linked data rather
+        than a JavaScript program (<a href="json-ld.html">demo</a>).</li>
+        <li><code>typescript</code> which will activate additional
+        syntax highlighting and some other things for TypeScript code
+        (<a href="typescript.html">demo</a>).</li>
+        <li><code>statementIndent</code> which (given a number) will
+        determine the amount of indentation to use for statements
+        continued on a new line.</li>
+        <li><code>wordCharacters</code>, a regexp that indicates which
+        characters should be considered part of an identifier.
+        Defaults to <code>/[\w$]/</code>, which does not handle
+        non-ASCII identifiers. Can be set to something more elaborate
+        to improve Unicode support.</li>
+      </ul>
+    </p>
+
+    <p><strong>MIME types defined:</strong> <code>text/javascript</code>, <code>application/json</code>, <code>application/ld+json</code>, <code>text/typescript</code>, <code>application/typescript</code>.</p>
+  </article>
diff --git a/qj-official-web/src/main/webapp/static/js/plugins/codemirror/mode/javascript/javascript.js b/qj-official-web/src/main/webapp/static/js/plugins/codemirror/mode/javascript/javascript.js
new file mode 100644
index 0000000000000000000000000000000000000000..93df06d152d74984c40b8f2834af34d1721a5cf9
--- /dev/null
+++ b/qj-official-web/src/main/webapp/static/js/plugins/codemirror/mode/javascript/javascript.js
@@ -0,0 +1,692 @@
+// CodeMirror, copyright (c) by Marijn Haverbeke and others
+// Distributed under an MIT license: http://codemirror.net/LICENSE
+
+// TODO actually recognize syntax of TypeScript constructs
+
+(function(mod) {
+  if (typeof exports == "object" && typeof module == "object") // CommonJS
+    mod(require("../../lib/codemirror"));
+  else if (typeof define == "function" && define.amd) // AMD
+    define(["../../lib/codemirror"], mod);
+  else // Plain browser env
+    mod(CodeMirror);
+})(function(CodeMirror) {
+"use strict";
+
+CodeMirror.defineMode("javascript", function(config, parserConfig) {
+  var indentUnit = config.indentUnit;
+  var statementIndent = parserConfig.statementIndent;
+  var jsonldMode = parserConfig.jsonld;
+  var jsonMode = parserConfig.json || jsonldMode;
+  var isTS = parserConfig.typescript;
+  var wordRE = parserConfig.wordCharacters || /[\w$\xa1-\uffff]/;
+
+  // Tokenizer
+
+  var keywords = function(){
+    function kw(type) {return {type: type, style: "keyword"};}
+    var A = kw("keyword a"), B = kw("keyword b"), C = kw("keyword c");
+    var operator = kw("operator"), atom = {type: "atom", style: "atom"};
+
+    var jsKeywords = {
+      "if": kw("if"), "while": A, "with": A, "else": B, "do": B, "try": B, "finally": B,
+      "return": C, "break": C, "continue": C, "new": C, "delete": C, "throw": C, "debugger": C,
+      "var": kw("var"), "const": kw("var"), "let": kw("var"),
+      "function": kw("function"), "catch": kw("catch"),
+      "for": kw("for"), "switch": kw("switch"), "case": kw("case"), "default": kw("default"),
+      "in": operator, "typeof": operator, "instanceof": operator,
+      "true": atom, "false": atom, "null": atom, "undefined": atom, "NaN": atom, "Infinity": atom,
+      "this": kw("this"), "module": kw("module"), "class": kw("class"), "super": kw("atom"),
+      "yield": C, "export": kw("export"), "import": kw("import"), "extends": C
+    };
+
+    // Extend the 'normal' keywords with the TypeScript language extensions
+    if (isTS) {
+      var type = {type: "variable", style: "variable-3"};
+      var tsKeywords = {
+        // object-like things
+        "interface": kw("interface"),
+        "extends": kw("extends"),
+        "constructor": kw("constructor"),
+
+        // scope modifiers
+        "public": kw("public"),
+        "private": kw("private"),
+        "protected": kw("protected"),
+        "static": kw("static"),
+
+        // types
+        "string": type, "number": type, "bool": type, "any": type
+      };
+
+      for (var attr in tsKeywords) {
+        jsKeywords[attr] = tsKeywords[attr];
+      }
+    }
+
+    return jsKeywords;
+  }();
+
+  var isOperatorChar = /[+\-*&%=<>!?|~^]/;
+  var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)"/;
+
+  function readRegexp(stream) {
+    var escaped = false, next, inSet = false;
+    while ((next = stream.next()) != null) {
+      if (!escaped) {
+        if (next == "/" && !inSet) return;
+        if (next == "[") inSet = true;
+        else if (inSet && next == "]") inSet = false;
+      }
+      escaped = !escaped && next == "\\";
+    }
+  }
+
+  // Used as scratch variables to communicate multiple values without
+  // consing up tons of objects.
+  var type, content;
+  function ret(tp, style, cont) {
+    type = tp; content = cont;
+    return style;
+  }
+  function tokenBase(stream, state) {
+    var ch = stream.next();
+    if (ch == '"' || ch == "'") {
+      state.tokenize = tokenString(ch);
+      return state.tokenize(stream, state);
+    } else if (ch == "." && stream.match(/^\d+(?:[eE][+\-]?\d+)?/)) {
+      return ret("number", "number");
+    } else if (ch == "." && stream.match("..")) {
+      return ret("spread", "meta");
+    } else if (/[\[\]{}\(\),;\:\.]/.test(ch)) {
+      return ret(ch);
+    } else if (ch == "=" && stream.eat(">")) {
+      return ret("=>", "operator");
+    } else if (ch == "0" && stream.eat(/x/i)) {
+      stream.eatWhile(/[\da-f]/i);
+      return ret("number", "number");
+    } else if (/\d/.test(ch)) {
+      stream.match(/^\d*(?:\.\d*)?(?:[eE][+\-]?\d+)?/);
+      return ret("number", "number");
+    } else if (ch == "/") {
+      if (stream.eat("*")) {
+        state.tokenize = tokenComment;
+        return tokenComment(stream, state);
+      } else if (stream.eat("/")) {
+        stream.skipToEnd();
+        return ret("comment", "comment");
+      } else if (state.lastType == "operator" || state.lastType == "keyword c" ||
+               state.lastType == "sof" || /^[\[{}\(,;:]$/.test(state.lastType)) {
+        readRegexp(stream);
+        stream.eatWhile(/[gimy]/); // 'y' is "sticky" option in Mozilla
+        return ret("regexp", "string-2");
+      } else {
+        stream.eatWhile(isOperatorChar);
+        return ret("operator", "operator", stream.current());
+      }
+    } else if (ch == "`") {
+      state.tokenize = tokenQuasi;
+      return tokenQuasi(stream, state);
+    } else if (ch == "#") {
+      stream.skipToEnd();
+      return ret("error", "error");
+    } else if (isOperatorChar.test(ch)) {
+      stream.eatWhile(isOperatorChar);
+      return ret("operator", "operator", stream.current());
+    } else if (wordRE.test(ch)) {
+      stream.eatWhile(wordRE);
+      var word = stream.current(), known = keywords.propertyIsEnumerable(word) && keywords[word];
+      return (known && state.lastType != ".") ? ret(known.type, known.style, word) :
+                     ret("variable", "variable", word);
+    }
+  }
+
+  function tokenString(quote) {
+    return function(stream, state) {
+      var escaped = false, next;
+      if (jsonldMode && stream.peek() == "@" && stream.match(isJsonldKeyword)){
+        state.tokenize = tokenBase;
+        return ret("jsonld-keyword", "meta");
+      }
+      while ((next = stream.next()) != null) {
+        if (next == quote && !escaped) break;
+        escaped = !escaped && next == "\\";
+      }
+      if (!escaped) state.tokenize = tokenBase;
+      return ret("string", "string");
+    };
+  }
+
+  function tokenComment(stream, state) {
+    var maybeEnd = false, ch;
+    while (ch = stream.next()) {
+      if (ch == "/" && maybeEnd) {
+        state.tokenize = tokenBase;
+        break;
+      }
+      maybeEnd = (ch == "*");
+    }
+    return ret("comment", "comment");
+  }
+
+  function tokenQuasi(stream, state) {
+    var escaped = false, next;
+    while ((next = stream.next()) != null) {
+      if (!escaped && (next == "`" || next == "$" && stream.eat("{"))) {
+        state.tokenize = tokenBase;
+        break;
+      }
+      escaped = !escaped && next == "\\";
+    }
+    return ret("quasi", "string-2", stream.current());
+  }
+
+  var brackets = "([{}])";
+  // This is a crude lookahead trick to try and notice that we're
+  // parsing the argument patterns for a fat-arrow function before we
+  // actually hit the arrow token. It only works if the arrow is on
+  // the same line as the arguments and there's no strange noise
+  // (comments) in between. Fallback is to only notice when we hit the
+  // arrow, and not declare the arguments as locals for the arrow
+  // body.
+  function findFatArrow(stream, state) {
+    if (state.fatArrowAt) state.fatArrowAt = null;
+    var arrow = stream.string.indexOf("=>", stream.start);
+    if (arrow < 0) return;
+
+    var depth = 0, sawSomething = false;
+    for (var pos = arrow - 1; pos >= 0; --pos) {
+      var ch = stream.string.charAt(pos);
+      var bracket = brackets.indexOf(ch);
+      if (bracket >= 0 && bracket < 3) {
+        if (!depth) { ++pos; break; }
+        if (--depth == 0) break;
+      } else if (bracket >= 3 && bracket < 6) {
+        ++depth;
+      } else if (wordRE.test(ch)) {
+        sawSomething = true;
+      } else if (/["'\/]/.test(ch)) {
+        return;
+      } else if (sawSomething && !depth) {
+        ++pos;
+        break;
+      }
+    }
+    if (sawSomething && !depth) state.fatArrowAt = pos;
+  }
+
+  // Parser
+
+  var atomicTypes = {"atom": true, "number": true, "variable": true, "string": true, "regexp": true, "this": true, "jsonld-keyword": true};
+
+  function JSLexical(indented, column, type, align, prev, info) {
+    this.indented = indented;
+    this.column = column;
+    this.type = type;
+    this.prev = prev;
+    this.info = info;
+    if (align != null) this.align = align;
+  }
+
+  function inScope(state, varname) {
+    for (var v = state.localVars; v; v = v.next)
+      if (v.name == varname) return true;
+    for (var cx = state.context; cx; cx = cx.prev) {
+      for (var v = cx.vars; v; v = v.next)
+        if (v.name == varname) return true;
+    }
+  }
+
+  function parseJS(state, style, type, content, stream) {
+    var cc = state.cc;
+    // Communicate our context to the combinators.
+    // (Less wasteful than consing up a hundred closures on every call.)
+    cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc; cx.style = style;
+
+    if (!state.lexical.hasOwnProperty("align"))
+      state.lexical.align = true;
+
+    while(true) {
+      var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;
+      if (combinator(type, content)) {
+        while(cc.length && cc[cc.length - 1].lex)
+          cc.pop()();
+        if (cx.marked) return cx.marked;
+        if (type == "variable" && inScope(state, content)) return "variable-2";
+        return style;
+      }
+    }
+  }
+
+  // Combinator utils
+
+  var cx = {state: null, column: null, marked: null, cc: null};
+  function pass() {
+    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);
+  }
+  function cont() {
+    pass.apply(null, arguments);
+    return true;
+  }
+  function register(varname) {
+    function inList(list) {
+      for (var v = list; v; v = v.next)
+        if (v.name == varname) return true;
+      return false;
+    }
+    var state = cx.state;
+    if (state.context) {
+      cx.marked = "def";
+      if (inList(state.localVars)) return;
+      state.localVars = {name: varname, next: state.localVars};
+    } else {
+      if (inList(state.globalVars)) return;
+      if (parserConfig.globalVars)
+        state.globalVars = {name: varname, next: state.globalVars};
+    }
+  }
+
+  // Combinators
+
+  var defaultVars = {name: "this", next: {name: "arguments"}};
+  function pushcontext() {
+    cx.state.context = {prev: cx.state.context, vars: cx.state.localVars};
+    cx.state.localVars = defaultVars;
+  }
+  function popcontext() {
+    cx.state.localVars = cx.state.context.vars;
+    cx.state.context = cx.state.context.prev;
+  }
+  function pushlex(type, info) {
+    var result = function() {
+      var state = cx.state, indent = state.indented;
+      if (state.lexical.type == "stat") indent = state.lexical.indented;
+      else for (var outer = state.lexical; outer && outer.type == ")" && outer.align; outer = outer.prev)
+        indent = outer.indented;
+      state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);
+    };
+    result.lex = true;
+    return result;
+  }
+  function poplex() {
+    var state = cx.state;
+    if (state.lexical.prev) {
+      if (state.lexical.type == ")")
+        state.indented = state.lexical.indented;
+      state.lexical = state.lexical.prev;
+    }
+  }
+  poplex.lex = true;
+
+  function expect(wanted) {
+    function exp(type) {
+      if (type == wanted) return cont();
+      else if (wanted == ";") return pass();
+      else return cont(exp);
+    };
+    return exp;
+  }
+
+  function statement(type, value) {
+    if (type == "var") return cont(pushlex("vardef", value.length), vardef, expect(";"), poplex);
+    if (type == "keyword a") return cont(pushlex("form"), expression, statement, poplex);
+    if (type == "keyword b") return cont(pushlex("form"), statement, poplex);
+    if (type == "{") return cont(pushlex("}"), block, poplex);
+    if (type == ";") return cont();
+    if (type == "if") {
+      if (cx.state.lexical.info == "else" && cx.state.cc[cx.state.cc.length - 1] == poplex)
+        cx.state.cc.pop()();
+      return cont(pushlex("form"), expression, statement, poplex, maybeelse);
+    }
+    if (type == "function") return cont(functiondef);
+    if (type == "for") return cont(pushlex("form"), forspec, statement, poplex);
+    if (type == "variable") return cont(pushlex("stat"), maybelabel);
+    if (type == "switch") return cont(pushlex("form"), expression, pushlex("}", "switch"), expect("{"),
+                                      block, poplex, poplex);
+    if (type == "case") return cont(expression, expect(":"));
+    if (type == "default") return cont(expect(":"));
+    if (type == "catch") return cont(pushlex("form"), pushcontext, expect("("), funarg, expect(")"),
+                                     statement, poplex, popcontext);
+    if (type == "module") return cont(pushlex("form"), pushcontext, afterModule, popcontext, poplex);
+    if (type == "class") return cont(pushlex("form"), className, poplex);
+    if (type == "export") return cont(pushlex("form"), afterExport, poplex);
+    if (type == "import") return cont(pushlex("form"), afterImport, poplex);
+    return pass(pushlex("stat"), expression, expect(";"), poplex);
+  }
+  function expression(type) {
+    return expressionInner(type, false);
+  }
+  function expressionNoComma(type) {
+    return expressionInner(type, true);
+  }
+  function expressionInner(type, noComma) {
+    if (cx.state.fatArrowAt == cx.stream.start) {
+      var body = noComma ? arrowBodyNoComma : arrowBody;
+      if (type == "(") return cont(pushcontext, pushlex(")"), commasep(pattern, ")"), poplex, expect("=>"), body, popcontext);
+      else if (type == "variable") return pass(pushcontext, pattern, expect("=>"), body, popcontext);
+    }
+
+    var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;
+    if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);
+    if (type == "function") return cont(functiondef, maybeop);
+    if (type == "keyword c") return cont(noComma ? maybeexpressionNoComma : maybeexpression);
+    if (type == "(") return cont(pushlex(")"), maybeexpression, comprehension, expect(")"), poplex, maybeop);
+    if (type == "operator" || type == "spread") return cont(noComma ? expressionNoComma : expression);
+    if (type == "[") return cont(pushlex("]"), arrayLiteral, poplex, maybeop);
+    if (type == "{") return contCommasep(objprop, "}", null, maybeop);
+    if (type == "quasi") { return pass(quasi, maybeop); }
+    return cont();
+  }
+  function maybeexpression(type) {
+    if (type.match(/[;\}\)\],]/)) return pass();
+    return pass(expression);
+  }
+  function maybeexpressionNoComma(type) {
+    if (type.match(/[;\}\)\],]/)) return pass();
+    return pass(expressionNoComma);
+  }
+
+  function maybeoperatorComma(type, value) {
+    if (type == ",") return cont(expression);
+    return maybeoperatorNoComma(type, value, false);
+  }
+  function maybeoperatorNoComma(type, value, noComma) {
+    var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;
+    var expr = noComma == false ? expression : expressionNoComma;
+    if (type == "=>") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);
+    if (type == "operator") {
+      if (/\+\+|--/.test(value)) return cont(me);
+      if (value == "?") return cont(expression, expect(":"), expr);
+      return cont(expr);
+    }
+    if (type == "quasi") { return pass(quasi, me); }
+    if (type == ";") return;
+    if (type == "(") return contCommasep(expressionNoComma, ")", "call", me);
+    if (type == ".") return cont(property, me);
+    if (type == "[") return cont(pushlex("]"), maybeexpression, expect("]"), poplex, me);
+  }
+  function quasi(type, value) {
+    if (type != "quasi") return pass();
+    if (value.slice(value.length - 2) != "${") return cont(quasi);
+    return cont(expression, continueQuasi);
+  }
+  function continueQuasi(type) {
+    if (type == "}") {
+      cx.marked = "string-2";
+      cx.state.tokenize = tokenQuasi;
+      return cont(quasi);
+    }
+  }
+  function arrowBody(type) {
+    findFatArrow(cx.stream, cx.state);
+    return pass(type == "{" ? statement : expression);
+  }
+  function arrowBodyNoComma(type) {
+    findFatArrow(cx.stream, cx.state);
+    return pass(type == "{" ? statement : expressionNoComma);
+  }
+  function maybelabel(type) {
+    if (type == ":") return cont(poplex, statement);
+    return pass(maybeoperatorComma, expect(";"), poplex);
+  }
+  function property(type) {
+    if (type == "variable") {cx.marked = "property"; return cont();}
+  }
+  function objprop(type, value) {
+    if (type == "variable" || cx.style == "keyword") {
+      cx.marked = "property";
+      if (value == "get" || value == "set") return cont(getterSetter);
+      return cont(afterprop);
+    } else if (type == "number" || type == "string") {
+      cx.marked = jsonldMode ? "property" : (cx.style + " property");
+      return cont(afterprop);
+    } else if (type == "jsonld-keyword") {
+      return cont(afterprop);
+    } else if (type == "[") {
+      return cont(expression, expect("]"), afterprop);
+    }
+  }
+  function getterSetter(type) {
+    if (type != "variable") return pass(afterprop);
+    cx.marked = "property";
+    return cont(functiondef);
+  }
+  function afterprop(type) {
+    if (type == ":") return cont(expressionNoComma);
+    if (type == "(") return pass(functiondef);
+  }
+  function commasep(what, end) {
+    function proceed(type) {
+      if (type == ",") {
+        var lex = cx.state.lexical;
+        if (lex.info == "call") lex.pos = (lex.pos || 0) + 1;
+        return cont(what, proceed);
+      }
+      if (type == end) return cont();
+      return cont(expect(end));
+    }
+    return function(type) {
+      if (type == end) return cont();
+      return pass(what, proceed);
+    };
+  }
+  function contCommasep(what, end, info) {
+    for (var i = 3; i < arguments.length; i++)
+      cx.cc.push(arguments[i]);
+    return cont(pushlex(end, info), commasep(what, end), poplex);
+  }
+  function block(type) {
+    if (type == "}") return cont();
+    return pass(statement, block);
+  }
+  function maybetype(type) {
+    if (isTS && type == ":") return cont(typedef);
+  }
+  function typedef(type) {
+    if (type == "variable"){cx.marked = "variable-3"; return cont();}
+  }
+  function vardef() {
+    return pass(pattern, maybetype, maybeAssign, vardefCont);
+  }
+  function pattern(type, value) {
+    if (type == "variable") { register(value); return cont(); }
+    if (type == "[") return contCommasep(pattern, "]");
+    if (type == "{") return contCommasep(proppattern, "}");
+  }
+  function proppattern(type, value) {
+    if (type == "variable" && !cx.stream.match(/^\s*:/, false)) {
+      register(value);
+      return cont(maybeAssign);
+    }
+    if (type == "variable") cx.marked = "property";
+    return cont(expect(":"), pattern, maybeAssign);
+  }
+  function maybeAssign(_type, value) {
+    if (value == "=") return cont(expressionNoComma);
+  }
+  function vardefCont(type) {
+    if (type == ",") return cont(vardef);
+  }
+  function maybeelse(type, value) {
+    if (type == "keyword b" && value == "else") return cont(pushlex("form", "else"), statement, poplex);
+  }
+  function forspec(type) {
+    if (type == "(") return cont(pushlex(")"), forspec1, expect(")"), poplex);
+  }
+  function forspec1(type) {
+    if (type == "var") return cont(vardef, expect(";"), forspec2);
+    if (type == ";") return cont(forspec2);
+    if (type == "variable") return cont(formaybeinof);
+    return pass(expression, expect(";"), forspec2);
+  }
+  function formaybeinof(_type, value) {
+    if (value == "in" || value == "of") { cx.marked = "keyword"; return cont(expression); }
+    return cont(maybeoperatorComma, forspec2);
+  }
+  function forspec2(type, value) {
+    if (type == ";") return cont(forspec3);
+    if (value == "in" || value == "of") { cx.marked = "keyword"; return cont(expression); }
+    return pass(expression, expect(";"), forspec3);
+  }
+  function forspec3(type) {
+    if (type != ")") cont(expression);
+  }
+  function functiondef(type, value) {
+    if (value == "*") {cx.marked = "keyword"; return cont(functiondef);}
+    if (type == "variable") {register(value); return cont(functiondef);}
+    if (type == "(") return cont(pushcontext, pushlex(")"), commasep(funarg, ")"), poplex, statement, popcontext);
+  }
+  function funarg(type) {
+    if (type == "spread") return cont(funarg);
+    return pass(pattern, maybetype);
+  }
+  function className(type, value) {
+    if (type == "variable") {register(value); return cont(classNameAfter);}
+  }
+  function classNameAfter(type, value) {
+    if (value == "extends") return cont(expression, classNameAfter);
+    if (type == "{") return cont(pushlex("}"), classBody, poplex);
+  }
+  function classBody(type, value) {
+    if (type == "variable" || cx.style == "keyword") {
+      cx.marked = "property";
+      if (value == "get" || value == "set") return cont(classGetterSetter, functiondef, classBody);
+      return cont(functiondef, classBody);
+    }
+    if (value == "*") {
+      cx.marked = "keyword";
+      return cont(classBody);
+    }
+    if (type == ";") return cont(classBody);
+    if (type == "}") return cont();
+  }
+  function classGetterSetter(type) {
+    if (type != "variable") return pass();
+    cx.marked = "property";
+    return cont();
+  }
+  function afterModule(type, value) {
+    if (type == "string") return cont(statement);
+    if (type == "variable") { register(value); return cont(maybeFrom); }
+  }
+  function afterExport(_type, value) {
+    if (value == "*") { cx.marked = "keyword"; return cont(maybeFrom, expect(";")); }
+    if (value == "default") { cx.marked = "keyword"; return cont(expression, expect(";")); }
+    return pass(statement);
+  }
+  function afterImport(type) {
+    if (type == "string") return cont();
+    return pass(importSpec, maybeFrom);
+  }
+  function importSpec(type, value) {
+    if (type == "{") return contCommasep(importSpec, "}");
+    if (type == "variable") register(value);
+    return cont();
+  }
+  function maybeFrom(_type, value) {
+    if (value == "from") { cx.marked = "keyword"; return cont(expression); }
+  }
+  function arrayLiteral(type) {
+    if (type == "]") return cont();
+    return pass(expressionNoComma, maybeArrayComprehension);
+  }
+  function maybeArrayComprehension(type) {
+    if (type == "for") return pass(comprehension, expect("]"));
+    if (type == ",") return cont(commasep(maybeexpressionNoComma, "]"));
+    return pass(commasep(expressionNoComma, "]"));
+  }
+  function comprehension(type) {
+    if (type == "for") return cont(forspec, comprehension);
+    if (type == "if") return cont(expression, comprehension);
+  }
+
+  function isContinuedStatement(state, textAfter) {
+    return state.lastType == "operator" || state.lastType == "," ||
+      isOperatorChar.test(textAfter.charAt(0)) ||
+      /[,.]/.test(textAfter.charAt(0));
+  }
+
+  // Interface
+
+  return {
+    startState: function(basecolumn) {
+      var state = {
+        tokenize: tokenBase,
+        lastType: "sof",
+        cc: [],
+        lexical: new JSLexical((basecolumn || 0) - indentUnit, 0, "block", false),
+        localVars: parserConfig.localVars,
+        context: parserConfig.localVars && {vars: parserConfig.localVars},
+        indented: 0
+      };
+      if (parserConfig.globalVars && typeof parserConfig.globalVars == "object")
+        state.globalVars = parserConfig.globalVars;
+      return state;
+    },
+
+    token: function(stream, state) {
+      if (stream.sol()) {
+        if (!state.lexical.hasOwnProperty("align"))
+          state.lexical.align = false;
+        state.indented = stream.indentation();
+        findFatArrow(stream, state);
+      }
+      if (state.tokenize != tokenComment && stream.eatSpace()) return null;
+      var style = state.tokenize(stream, state);
+      if (type == "comment") return style;
+      state.lastType = type == "operator" && (content == "++" || content == "--") ? "incdec" : type;
+      return parseJS(state, style, type, content, stream);
+    },
+
+    indent: function(state, textAfter) {
+      if (state.tokenize == tokenComment) return CodeMirror.Pass;
+      if (state.tokenize != tokenBase) return 0;
+      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical;
+      // Kludge to prevent 'maybelse' from blocking lexical scope pops
+      if (!/^\s*else\b/.test(textAfter)) for (var i = state.cc.length - 1; i >= 0; --i) {
+        var c = state.cc[i];
+        if (c == poplex) lexical = lexical.prev;
+        else if (c != maybeelse) break;
+      }
+      if (lexical.type == "stat" && firstChar == "}") lexical = lexical.prev;
+      if (statementIndent && lexical.type == ")" && lexical.prev.type == "stat")
+        lexical = lexical.prev;
+      var type = lexical.type, closing = firstChar == type;
+
+      if (type == "vardef") return lexical.indented + (state.lastType == "operator" || state.lastType == "," ? lexical.info + 1 : 0);
+      else if (type == "form" && firstChar == "{") return lexical.indented;
+      else if (type == "form") return lexical.indented + indentUnit;
+      else if (type == "stat")
+        return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || indentUnit : 0);
+      else if (lexical.info == "switch" && !closing && parserConfig.doubleIndentSwitch != false)
+        return lexical.indented + (/^(?:case|default)\b/.test(textAfter) ? indentUnit : 2 * indentUnit);
+      else if (lexical.align) return lexical.column + (closing ? 0 : 1);
+      else return lexical.indented + (closing ? 0 : indentUnit);
+    },
+
+    electricInput: /^\s*(?:case .*?:|default:|\{|\})$/,
+    blockCommentStart: jsonMode ? null : "/*",
+    blockCommentEnd: jsonMode ? null : "*/",
+    lineComment: jsonMode ? null : "//",
+    fold: "brace",
+
+    helperType: jsonMode ? "json" : "javascript",
+    jsonldMode: jsonldMode,
+    jsonMode: jsonMode
+  };
+});
+
+CodeMirror.registerHelper("wordChars", "javascript", /[\w$]/);
+
+CodeMirror.defineMIME("text/javascript", "javascript");
+CodeMirror.defineMIME("text/ecmascript", "javascript");
+CodeMirror.defineMIME("application/javascript", "javascript");
+CodeMirror.defineMIME("application/x-javascript", "javascript");
+CodeMirror.defineMIME("application/ecmascript", "javascript");
+CodeMirror.defineMIME("application/json", {name: "javascript", json: true});
+CodeMirror.defineMIME("application/x-json", {name: "javascript", json: true});
+CodeMirror.defineMIME("application/ld+json", {name: "javascript", jsonld: true});
+CodeMirror.defineMIME("text/typescript", { name: "javascript", typescript: true });
+CodeMirror.defineMIME("application/typescript", { name: "javascript", typescript: true });
+
+});
diff --git a/qj-official-web/src/main/webapp/static/js/plugins/codemirror/mode/javascript/json-ld.html b/qj-official-web/src/main/webapp/static/js/plugins/codemirror/mode/javascript/json-ld.html
new file mode 100644
index 0000000000000000000000000000000000000000..aa03d6a176208d58291045d9355708cb6ad00524
--- /dev/null
+++ b/qj-official-web/src/main/webapp/static/js/plugins/codemirror/mode/javascript/json-ld.html
@@ -0,0 +1,72 @@
+<!doctype html>
+
+<title>CodeMirror: JSON-LD mode</title>
+<meta charset="utf-8"/>
+<link rel=stylesheet href="../../doc/docs.css">
+
+<link rel="stylesheet" href="../../lib/codemirror.css">
+<script src="../../lib/codemirror.js"></script>
+<script src="../../addon/edit/matchbrackets.js"></script>
+<script src="../../addon/comment/continuecomment.js"></script>
+<script src="../../addon/comment/comment.js"></script>
+<script src="javascript.js"></script>
+<style type="text/css">.CodeMirror {border-top: 1px solid black; border-bottom: 1px solid black;}</style>
+<div id="nav">
+  <a href="http://codemirror.net"><h1>CodeMirror</h1><img id=logo src="../../doc/logo.png"/></a>
+
+  <ul>
+    <li><a href="../../index.html">Home</a>
+    <li><a href="../../doc/manual.html">Manual</a>
+    <li><a href="https://github.com/codemirror/codemirror">Code</a>
+  </ul>
+  <ul>
+    <li><a href="../index.html">Language modes</a>
+    <li><a class=active href="#">JSON-LD</a>
+  </ul>
+</div>
+
+<article>
+<h2>JSON-LD mode</h2>
+
+
+<div><textarea id="code" name="code">
+{
+  "@context": {
+    "name": "http://schema.org/name",
+    "description": "http://schema.org/description",
+    "image": {
+      "@id": "http://schema.org/image",
+      "@type": "@id"
+    },
+    "geo": "http://schema.org/geo",
+    "latitude": {
+      "@id": "http://schema.org/latitude",
+      "@type": "xsd:float"
+    },
+    "longitude": {
+      "@id": "http://schema.org/longitude",
+      "@type": "xsd:float"
+    },
+    "xsd": "http://www.w3.org/2001/XMLSchema#"
+  },
+  "name": "The Empire State Building",
+  "description": "The Empire State Building is a 102-story landmark in New York City.",
+  "image": "http://www.civil.usherbrooke.ca/cours/gci215a/empire-state-building.jpg",
+  "geo": {
+    "latitude": "40.75",
+    "longitude": "73.98"
+  }
+}
+</textarea></div>
+
+    <script>
+      var editor = CodeMirror.fromTextArea(document.getElementById("code"), {
+        matchBrackets: true,
+        autoCloseBrackets: true,
+        mode: "application/ld+json",
+        lineWrapping: true
+      });
+    </script>
+
+    <p>This is a specialization of the <a href="index.html">JavaScript mode</a>.</p>
+  </article>
diff --git a/qj-official-web/src/main/webapp/static/js/plugins/codemirror/mode/javascript/test.js b/qj-official-web/src/main/webapp/static/js/plugins/codemirror/mode/javascript/test.js
new file mode 100644
index 0000000000000000000000000000000000000000..91b0e89a06a7e0a6503b238fbb906ba0f085bb49
--- /dev/null
+++ b/qj-official-web/src/main/webapp/static/js/plugins/codemirror/mode/javascript/test.js
@@ -0,0 +1,200 @@
+// CodeMirror, copyright (c) by Marijn Haverbeke and others
+// Distributed under an MIT license: http://codemirror.net/LICENSE
+
+(function() {
+  var mode = CodeMirror.getMode({indentUnit: 2}, "javascript");
+  function MT(name) { test.mode(name, mode, Array.prototype.slice.call(arguments, 1)); }
+
+  MT("locals",
+     "[keyword function] [variable foo]([def a], [def b]) { [keyword var] [def c] [operator =] [number 10]; [keyword return] [variable-2 a] [operator +] [variable-2 c] [operator +] [variable d]; }");
+
+  MT("comma-and-binop",
+     "[keyword function](){ [keyword var] [def x] [operator =] [number 1] [operator +] [number 2], [def y]; }");
+
+  MT("destructuring",
+     "([keyword function]([def a], [[[def b], [def c] ]]) {",
+     "  [keyword let] {[def d], [property foo]: [def c][operator =][number 10], [def x]} [operator =] [variable foo]([variable-2 a]);",
+     "  [[[variable-2 c], [variable y] ]] [operator =] [variable-2 c];",
+     "})();");
+
+  MT("class_body",
+     "[keyword class] [variable Foo] {",
+     "  [property constructor]() {}",
+     "  [property sayName]() {",
+     "    [keyword return] [string-2 `foo${][variable foo][string-2 }oo`];",
+     "  }",
+     "}");
+
+  MT("class",
+     "[keyword class] [variable Point] [keyword extends] [variable SuperThing] {",
+     "  [property get] [property prop]() { [keyword return] [number 24]; }",
+     "  [property constructor]([def x], [def y]) {",
+     "    [keyword super]([stri .nav span{display:inline-block;position:relative;z-index:2;font-size:18px;line-height:2;text-align:center;border-bottom:3px solid transparent}.wqdArtPluginLx_2 .nav span.on,.wqdArtPluginLx_2 .nav span:hover{border-bottom:3px solid #ff9900;font-weight:700;cursor:pointer}.wqdArtPluginLx_2 .nav .nav-more{display:none;position:absolute;top:37px;padding:9px 0;width:100%;background:#fff;box-shadow:0 6px 6px 0 rgba(199,199,199,0.7);border-radius:3px;z-index:1}.wqdArtPluginLx_2 .newsList{line-height:1;padding:10px 19px}.wqdArtPluginLx_2 .newsList .list-cell{margin-top:20px;width:100%}.wqdArtPluginLx_2 .newsList .list-cell .title{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-size:20px}.wqdArtPluginLx_2 .newsList .list-cell .imgGroup{width:102%;margin:20px 0}.wqdArtPluginLx_2 .newsList .list-cell .imgGroup img{display:inline-block;width:33.3%;padding-right:2%}.wqdArtPluginLx_2 .newsList .list-cell .footer{height:24px;margin-bottom:20px;color:#666;font-size:14px;line-height:24px}.wqdArtPluginLx_2 .newsList .list-cell .fl{float:left;width:60%;height:27px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.wqdArtPluginLx_2 .newsList .list-cell .fl span{display:inline-block}.wqdArtPluginLx_2 .newsList .list-cell .fl .tag{color:#fff;background:#dcdcdc;text-align:center;padding:0 8px;border-radius:3px;margin-left:14px;margin-top:2px;margin-bottom:2px}.wqdArtPluginLx_2 .newsList .list-cell .fr{float:right;width:40%;text-align:right}.wqdArtPluginLx_2 .newsList .list-cell .fr span{display:inline-block;margin-left:5px;padding:0 2px}.wqdArtPluginLx_2 .newsList .list-cell .fr .fav{margin-left:0px}.wqdArtPluginLx_2 .newsList .list-cell .fr span i{display:inline-block}.wqdArtPluginLx_2 .newsList .list-cell .fr .fav i{margin-right:7px;width:20px;height:20px;cursor:pointer}.wqdArtPluginLx_2 .newsList .list-cell .fr .view i{margin-right:7px;width:20px;height:20px}.wqdArtPluginLx_2 .newsList .list-cell .fr .fav i svg,.wqdArtPluginLx_2 .newsList .list-cell .fr .view i svg{margin-bottom:-4px;fill:#000}.wqdArtPluginLx_2 .newsList .list-cell .line{width:100%;height:0px;border-top:0px solid #eee}.wqdArtPluginLx_2 .newsList .load-more{text-align:center;margin-top:30px}.wqdArtPluginLx_2 .newsList .load-more p{display:inline-block;width:160px;height:47px;line-height:47px;background:#ff9900;color:#fff;font-size:16px;border-radius:47px;cursor:pointer}.wqdArtPluginLx_2 .newsList .list-cell.artPlugin-no-data .title{text-align:center;font-weight:900;font-size:18px;line-height:2}.wqdArtPluginLx_1 .newsList .list-cell.artPlugin-no-data .newsTitle{text-align:center;font-weight:900;font-size:18px;line-height:2;width:85%}.wqdArtPluginLx_1 svg,.wqdArtPluginLx_2 svg{stroke:none}.wqdArtPluginLx_1.no-title .newsTitle,.wqdArtPluginLx_1.no-nav .nav,.wqdArtPluginLx_1.no-loadmore .load-more,.wqdArtPluginLx_1.no-view .view,.wqdArtPluginLx_2.no-title .title,.wqdArtPluginLx_2.no-nav .nav,.wqdArtPluginLx_2.no-view .view,.wqdArtPluginLx_2.no-tag .tag,.wqdArtPluginLx_2.no-time .show-time,.wqdArtPluginLx_2.no-goods .fav,.wqdArtPluginLx_2.no-loadmore .load-more{display:none !important}.wqdArtPluginLx_1.no-line .list-cell,.wqdArtPluginLx_2.no-line .list-cell{border-bottom:none !important}.wqdArtPluginLx_2.no-line hr.line{display:none}.wqdArtPluginLx_1.no-border,.wqdArtPluginLx_2.no-border{border:0 !important}.wqdArtPluginLx_1.no-bg,.wqdArtPluginLx_2.no-bg{background:transparent !important}.wqdelementEdit.articleDetails{position:relative}.wqdelementEdit.articleDetails .wqdelementEditBox,.wqdelementEdit.articleDetails .artDetlContent,.wqdelementEdit.articleDetails .dragMar{position:relative}.artdetlHide{display:none}.wqdelementEdit.articleDetails{height:auto !important}.wqdelementEdit.articleDetails .artDetlContent img{max-width:100% !important;height:auto !important}.wqd-breadcrumb{padding:8px 0;margin-bottom:20px;list-style:none;border-radius:4px}.wqd-breadcrumb>li{display:inline-block}.wqd-breadcrumb>li+li:before{color:#ccc;content:"> ";padding:0 5px}.artDetlTitle h1{font-size:32px;line-height:1}.wqdelementEdit.artDetlViewcount svg,.wqdelementEdit.artDetlFollow svg{height:20px;width:23px;vertical-align:middle}.wqdelementEdit.artDetlViewcount svg+span,.wqdelementEdit.artDetlFollow svg{vertical-align:middle}.artDetlSummary p{padding:14px}.wqdelementEdit.artDetlShare{position:relative;margin-bottom:10px}.wqdelementEdit.artListContainer{position:relative}.artlHide{display:none !important}.articleLists a{color:#333333}.articleLists .artListHr div.hr-line{border-color:#dcdcdc;border-top:1px solid;height:0;position:relative;top:50%}.artlTagUl>.artlTagButton{text-align:center;cursor:pointer}.artlTagUl>.artlTagButton p{transform:translateY(-50%);-webkit-transform:translateY(-50%);-moz-transform:translateY(-50%);-ms-transform:translateY(-50%);position:absolute;top:50%}.artlTagUl>.artlTagButton:hover,.artlTagUl>.artlTagButton.on{color:#ff8a93}.artListContainer .articleListTitle .wqdTitleWarp{color:#333}.artListContainer .articleListTitle h3{line-height:1.3;font-weight:inherit;font-size:24px}.artListContainer .articleListContent{color:#666;font-size:14px}.artListContainer .articleListTime,.artListContainer .artListFollow,.artListContainer .artListViewcount{color:#999}.artListContainer .articleListTime p{line-height:1;font-size:14px}.artListContainer .artListViewcount svg{float:left;height:18px;width:23px}.artListContainer .artListFollow,.artListContainer .artListViewcount{font-size:14px}.artListContainer .artListFollow svg{float:left;height:19px;width:22px}.artListContainer .artListFollow span{float:left}.artListContainer .artListViewcount span{float:left}.artListContainer .artListLinkButton a{vertical-align:top;background:#ff8a93;border-radius:20px;font-size:12px;cursor:pointer;font-style:inherit;font-weight:inherit;color:#fff;border:solid #fff;border-width:0px}.artListContainer .artListLinkButton a:hover{background:#e07981}.artListContainer .artListLinkButton a em{font-style:inherit}.artListContainer .articleListLine div.wqd-line{border-top:1px solid #dcdcdc}.artListPaging{text-align:center}.articleLists .artListPaging>li{display:inline-block;width:1.75em;background:#ebebeb;border-radius:45px;line-height:1.75;margin-right:7px;color:#898989;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none}.artListPaging li.next,.artListPaging li.prev,.artListPaging li.last,.artListPaging li.first{width:4.28em}ul.artListPaging>li.on,ul.artListPaging>li:hover{background:#ff8a93;color:#fff}.newArticleList .artListPaging>li{display:inline-block;width:1.75em;background:#ebebeb;border-radius:45px;line-height:1.75;margin-right:7px;color:#898989;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;text-align:center;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;background:#fff}.newArticleList .artListPaging li.next,.newArticleList .artListPaging li.prev,.newArticleList .artListPaging li.last,.newArticleList .artListPaging li.first{width:4.28em}.newArticleList .artListPaging>li.on,.newArticleList .artListPaging>li:hover{background:#6dd2f0;border-color:#6dd2f0;color:#fff}.wqdelementEdit[data-elementtype='hoverContainer']{background:transparent}.wqdelementEdit[data-elementtype='hoverContainer']:hover{z-index:10000 !important}.hc-fixed{z-index:998 !important}.wqdelementEdit.newArticleList{width:auto !important;height:auto !important;border:1px none #dcdcdc}.wqdelementEdit.newArticleList .wqdelementEditBox{position:relative}.wqdelementEdit.newArticleList>.wqdelementEditBox{overflow:visible;text-align:center}.wqdelementEdit.newArticleList h3{font-size:12px}.wqdelementEdit.newArticleList h3 a{font-size:24px}.newArticleList .newArticleListDetail{position:relative;width:725px;height:146px;padding:.5%;border-bottom:1px solid #dcdcdc;text-align:left}.noPaging .artlist>li:nth-last-child(1) .newArticleListDetail{border-bottom:none !important}.newArticleList .artListPaging.show{display:inline-block !important}.newArticleList .artListPaging li{border:1px solid #e1e1e1}.newArticleList .artListPaging.artlPagingStyle1{text-align:center;display:inline-block;border:solid 1px #e1e1e1;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px;overflow:hidden}.newArticleList .artListPaging.artlPagingStyle1 li{border:none 1px #e1e1e1;margin-right:0;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;width:2em;line-height:2.1em}.newArticleList .artListPaging.artlPagingStyle1 li.next,.newArticleList .artListPaging.artlPagingStyle1 li.prev,.newArticleList .artListPaging.artlPagingStyle1 li.last,.newArticleList .artListPaging.artlPagingStyle1 li.first{width:2.1em}.newArticleList .artlPagingStyle2{border-style:none !important}.newArticleList .artListPaging{margin:15px 0;display:none}.artdetail>.right{width:67.9%}.artdetail .artListTitle h3{font-size:22px;color:#000000;font-weight:bold;margin-bottom:7px;min-height:16.9%}.artdetail h3 a{color:#000000}.artdetail h3 img{width:26px;height:26px;vertical-align:middle;position:relative;top:-3px;margin-right:5px}.artdetail .left{float:left;display:inline;width:29.7%;height:100%}.artdetail .artListImage a{display:inline-block;overflow:hidden;height:100%}.artdetail .artListImage img{width:100%;max-height:100%}.artdetail .right{float:right;display:inline;width:67.9%;height:73%;text-align:left;position:relative}.artdetail .artListInfobar{overflow:hidden;width:100%;font-size:12px;color:#999;border-color:#999}.artListInfobar>div{display:inline}.artListTag span{display:inline-block;margin-right:5px;border-width:1px;border-style:none;padding:0 3px;border-color:#999;background-color:#ccc;color:#ffffff}.artListTag span:last-child{margin-right:12px}.artListInfobar .info{float:right}.artListInfobar .info span{display:inline-block;margin-right:5px}.artdetail .content{color:#666666;font-size:14px;display:table}.artdetail .artListSummary{vertical-align:middle;display:block;max-height:58%;min-height:1.2em;overflow:hidden}.artdetail .artListSummary a{color:#666666}.artdetail .artListSummary a:hover,.artdetail .artListSummary a:active{color:#666666}.artListInfobar .info .artListNegative,.artListInfobar .info .artListTop,.artListInfobar .info .artListShare{display:none}.artdetail .none{display:none}.artTheme1 .artListInfobar,.artTheme2 .artListInfobar,.artTheme3 .artListInfobar,.artTheme6 .artListInfobar.bottom{margin-top:1%;position:absolute;top:auto;bottom:0;min-height:17px}.artTheme1 .wqdelementEdit.newArticleListDetail{min-height:71px !important}.artTheme1 .right{height:100%}.artTheme1 .artListTitle h3{overflow:hidden;width:100%;height:100%;text-overflow:ellipsis;white-space:nowrap}.artTheme2 .newArticleListDetail{height:181px}.artTheme2 .right{height:82.9%;padding-bottom:3px}.artTheme6 .right,.artTheme6 .left{height:82.9%;padding-bottom:3px}.artTheme2 .artListTitle,.artTheme3 .artListTitle,.artTheme6 .artListTitle{height:17.1%}.artTheme3 .newArticleListDetail{height:205px}.artTheme3 .artlCon{position:absolute;top:17.1%;bottom:17%;width:100%}.artTheme3 .right{height:100%}.artTheme3 .artListSummary{max-height:100%}.artTheme4 .newArticleListDetail{height:146px}.artTheme4 .artdetail.wqdelementEditBox{padding:5px 0}.artTheme4 .artListInfobar{margin:10px 0}.artTheme5 .newArticleListDetail{height:205px}.artTheme5 .artListTitle{min-height:26px;height:16%}.artTheme5 .artListInfobar{height:12%}.artTheme5 .artdetail .artListTag{width:32.1%;overflow:hidden}.artTheme5 .artdetail .artListTime{display:inline-block}.artTheme5 .artListInfobar .info{margin-right:0}.artTheme5 .artlCon{height:72%}.artTheme6 .newArticleListDetail{height:186px}.artTheme6 .artdetail .artListInfobar{display:block}.artTheme6 .artListSummary{padding-top:7px}.newArticleList.artlTagStyle1 .artListTag span{border-radius:15px}.newArticleList.artlTagStyle2 .artListTag span{border-radius:6px}.newArticleList.artlTagStyle4 .artListTag span,.newArticleList.artlTagStyle5 .artListTag span,.newArticleList.artlTagStyle6 .artListTag span{-webkit-background-size:100% 100%;-moz-background-size:100% 100%;-o-background-size:100% 100%;background-size:100% 100%}.newArticleList.artlTagStyle4 .artListTag span{background-image:url("../../../images/v2/design/popup/art_tag1.png");padding-left:6px;padding-right:1px}.newArticleList.artlTagStyle5 .artListTag span{background-image:url("../../../images/v2/design/popup/art_tag2.png");padding-left:5px}.newArticleList.artlTagStyle6 .artListTag span{background-image:url("../../../images/v2/design/popup/art_tag3.png");padding-left:8px;padding-right:1px}.wqdVideo[model="hover"] .video,.wqdVideo[model="null"] .video{transition:padding 0.3s;padding-bottom:0}.wqdVideo[model="hover"] .controls,.wqdVideo[model="null"] .controls{transition:bottom 0.3s;bottom:-38px}.wqdVideo[model="hover"]:hover .controls{bottom:0}.wqdVideo[headline="headline"] .headline{display:block}.video{width:100%;height:100%;position:relative;background:#000}.video .poster{position:relative;width:100%;height:100%;background-size:cover;background-position:center center;background-repeat:no-repeat}.video .poster.on{background-image:inherit}.video video{width:1px;height:1px}.video video.on{width:100%;height:100%;cursor:pointer;background:#000000}.video .layer{position:absolute;top:0;left:0;width:100%;height:100%;background:linear-gradient(to bottom, rgba(0,0,0,0.5), transparent 25%, transparent 85%, rgba(0,0,0,0.4))}.video .layer h3{display:none;padding:10px 15px;font-size:18px;color:#fff}.video .layer.on{position:static;width:0;height:0}.video .screenage{position:absolute;top:50%;left:50%;width:65px;height:65px;background:url(../../../components/elements/wqdVideo/images/screenage.png) no-repeat 0 0;transform:translate(-50%, -50%);cursor:pointer}.video .screenage.hide{display:none}.video .duration{position:absolute;bottom:5px;right:5px;width:65px;height:20px;line-height:20px;text-align:center;font-size:14px;color:#fff;overflow:hidden}.video .controls{position:absolute;left:0;bottom:0;width:100%;height:38px;line-height:39px;background:rgba(26,26,26,0.4);font-size:0;padding:0 20px}.video .controls.fullControll{z-index:2147483650}.video .controls .left{float:left}.video .controls .right{float:right}.video .controls .center{position:absolute;top:-12px;left:0;height:12px;width:100%}.video .controls .center:hover .point{opacity:1}.video .controls .center:hover .process{height:12px}.video .controls .center:hover .total{opacity:1}.video .controls a,.video .controls span,.video .controls div,.video .controls i,.video .controls strong{display:inline-block}.video .process{position:absolute;bottom:0;width:100%;height:2px;overflow:hidden;cursor:pointer;transition:height 0.3s}.video .process .total,.video .process .loaded,.video .process .loading{position:absolute;left:0}.video .process .total{width:100%;height:15px;background:#555555;opacity:0.5}.video .process .loaded,.video .process .loading{height:15px}.video .process .loaded{width:190px}.video .process .loading{background:#578bea}.video .process .point{position:absolute;top:0;opacity:0;transition:opacity 0.3s;width:12px;height:12px;background:#ffffff;border-radius:50%;z-index:1;cursor:pointer}.video .volume-controls{margin:0 20px 0 8px;width:60px;height:12px;position:relative;line-height:15px;vertical-align:middle}.video .volume-controls .volume-wrap{position:absolute;width:100%;height:100%}.video .volume-controls .volume-total,.video .volume-controls .volume-progress{position:absolute;left:0;top:5px}.video .volume-controls .volume-total{width:100%;height:2px;background:#aaaaaa;cursor:pointer}.video .volume-controls .volume-progress{height:2px;background:#578bea;width:30px}.video .volume-controls .volume-point{position:absolute;top:1px;width:10px;height:10px;background:#dddddd;border-radius:50%;z-index:1;cursor:pointer}.video .play{width:15px;height:19px;background:url(../../../components/elements/wqdVideo/images/controls.png) no-repeat 0 0;background-position:-10px -298px;vertical-align:middle;margin-right:20px}.video .play:hover{background-position:-10px -337px}.video .play.on{background-position:-10px -415px}.video .play.on:hover{background-position:-10px -376px}.video .re-play{width:17px;height:17px;background:url(../../../components/elements/wqdVideo/images/controls.png) no-repeat 0 0;background-position:0px -33px;vertical-align:middle}.video .current{text-align:center;font-size:14px;color:#fff;vertical-align:middle}.video .interval{margin:0 4px;text-align:center;font-size:14px;vertical-align:middle;color:#999999}.video .remain{text-align:center;font-size:14px;vertical-align:middle;color:#999999}.video .volume{width:17px;height:15px;background:url(../../../components/elements/wqdVideo/images/controls.png) no-repeat 0 0;background-position:-10px -45px;vertical-align:middle}.video .volume:hover{background-position:-10px -10px}.video .volume.on{background-position:-10px -80px}.video .volume.on:hover{background-position:-10px -115px}.video .full-screen{width:17px;height:17px;background:url(../../../components/elements/wqdVideo/images/controls.png) no-repeat 0 0;background-position:-10px -150px;vertical-align:middle}.video .full-screen:hover{background-position:-10px -224px}.video .full-screen.on{background-position:-10px -187px}.video .full-screen.on:hover{background-position:-10px -261px}::-webkit-media-controls{display:none !important}video::-webkit-media-controls{display:none !important}video::-webkit-media-controls-enclosure{display:none !important}:fullscreen::backdrop{background-color:#006}:-ms-fullscreen::-ms-backdrop{background-color:#006}:-webkit-full-screen{position:fixed;width:100%;top:0;background:none}:-ms-fullscreen{width:auto;height:auto;margin:auto}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}video::-webkit-media-controls-enclosure{display:none !important}.video .process .point{left:-6px}.video .process .loading{width:0%}.video .volume-controls .volume-point{left:-5px}.video .volume-controls .volume-progress{width:0%}.hiwqd .video .process .loading{width:100px}.hiwqd .video .process .point{left:93px}.hiwqd .video .volume-controls .volume-point{left:23px}.hiwqd .video .volume-controls .volume-progress{width:30px}body.phone .video .controls .center{top:0}
